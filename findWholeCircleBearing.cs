/// <summary> The comment lines generated by the ChatGPT
/// Return the whole circle bearing in degrees.
/// </summary>
/*
This code defines a public static method named getWCB_Bearing that calculates the whole circle bearing (WCB) in degrees 
between two points (x1, y1) and (x2, y2) on a Cartesian plane. The whole circle bearing represents the compass direction or angle in degrees
from the starting point to the ending point. 
a) It calculates the differences in the x and y coordinates between the two points:
  delx is the difference between x2 and x1.
  dely is the difference between y2 and y1.
b) It initializes the wcb (whole circle bearing) variable to 0.
c) It checks if delx is equal to 0. If delx is 0, it means that the points are on a vertical line (same x-coordinate), 
  and it returns a bearing of 90 degrees (pointing north).
d) If delx is not 0 (meaning the points are not on a vertical line), it calculates the arctangent (inverse tangent) 
  of the absolute value of the ratio dely / delx. This gives the angle in radians between the line connecting the two points and the positive x-axis. 
  This angle is then converted from radians to degrees.
e) Based on the signs of delx and dely, it adjusts the wcb value to represent the correct compass direction:
  If delx is positive and dely is positive, it subtracts the calculated angle from 90 degrees.
  If delx is positive and dely is negative, it adds 90 degrees to the calculated angle.
  If delx is negative and dely is negative, it subtracts the calculated angle from 270 degrees.
  If delx is negative and dely is positive, it adds 270 degrees to the calculated angle.
Finally, it returns the calculated whole circle bearing wcb in degrees.
In essence, this method calculates the compass direction from one point to another, considering the relative positions of the two points on the Cartesian plane. 
The returned value represents the angle in degrees, where 0 degrees points east, 90 degrees points north, 
180 degrees points west, and 270 degrees points south, with other angles indicating directions in between.
*/
/// <returns></returns>
public static double getWCB_Bearing(double x1,double y1,double x2, double y2)
{
    double delx = x2 - x1;
    double dely = y2 - y1;
    double wcb = 0;
    if (delx == 0)
        return 90;
    else
    {   wcb = Math.Atan(Math.Abs(dely / delx));
        wcb = 180 * wcb / Math.PI;}

    if (delx >= 0 && dely >= 0)
        wcb = 90 - wcb;
    else if (delx >= 0 && dely < 0)
        wcb = wcb + 90;
    else if (delx < 0 && dely < 0)
        wcb = 270 - wcb;
    else if (delx < 0 && dely >= 0)
        wcb = wcb + 270;
    return wcb;
}
